<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                           http://www.springframework.org/schema/tx    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
                           http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
                           http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <!-- Enable configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" order="1"/>

    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/ned"/>
    </bean>

    <!-- Configure Spring's transaction manager to use a DataSource -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Configure jOOQ's ConnectionProvider to use Spring's TransactionAwareDataSourceProxy,
         which can dynamically discover the transaction context -->
    <bean id="transactionAwareDataSource"
        class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean class="org.jooq.impl.DataSourceConnectionProvider" name="connectionProvider">
        <constructor-arg ref="transactionAwareDataSource" />
    </bean>

    <!-- Configure jOOQ DSL object -->
    <bean id="dsl" class="org.jooq.impl.DefaultDSLContext">
        <constructor-arg ref="config" />
    </bean>
    
    <bean id="exceptionTranslator" class="org.plos.namedentity.spring.exception.SqlExceptionTranslator" />
    
    <bean class="org.jooq.impl.DefaultConfiguration" name="config">
        <constructor-arg index="0" ref="connectionProvider" />
        <constructor-arg index="1"><null /></constructor-arg>
        <constructor-arg index="2"><null /></constructor-arg>
        <constructor-arg index="3">
            <list>
                <bean class="org.jooq.impl.DefaultExecuteListenerProvider">
                    <constructor-arg index="0" ref="exceptionTranslator"/>
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg index="4"><null /></constructor-arg>
        <constructor-arg index="5"><value type="org.jooq.SQLDialect">MYSQL</value></constructor-arg>
        <constructor-arg index="6"><null /></constructor-arg>
        <constructor-arg index="7"><null /></constructor-arg>
    </bean>

    <bean id="authenticationFilter" class="org.plos.namedentity.filter.AuthenticationFilter">
        <property name="authService" ref="authService"/>
    </bean>

    <bean id="authService"          class="org.plos.namedentity.service.AuthServiceImpl"/>
    <bean id="crudService"          class="org.plos.namedentity.service.CrudServiceImpl"/>
    <bean id="entityPostValidator"  class="org.plos.namedentity.validate.EntityPostValidator" />
    <bean id="infoService"          class="org.plos.namedentity.service.InfoService" />
    <bean id="namedEntityDBService" class="org.plos.namedentity.persist.NamedEntityDBServiceImpl"/>
    <bean id="namedEntityService"   class="org.plos.namedentity.service.NamedEntityServiceImpl"/>
    <bean id="ringgoldDBService"    class="org.plos.namedentity.persist.RinggoldDBServiceImpl"/>
    <bean id="ringgoldService"      class="org.plos.namedentity.service.RinggoldServiceImpl"/>

    <bean id="validator" class="org.plos.namedentity.validate.NamedEntityValidator">
        <!-- execute after the Transactional advice (hence higher order number) -->
        <property name="order" value="200"/>
        <property name="entityPostValidator" ref="entityPostValidator"/>
    </bean>

    <bean id="jsonValidator" class="org.plos.namedentity.validate.JsonValidator"/>

    <aop:config>
        <aop:aspect id="validatingAspect" ref="validator">
            <aop:pointcut id="createOrUpdate"
                    expression="execution(* org.plos.namedentity.service.NamedEntityServiceImpl.create*(..)) || execution(* org.plos.namedentity.service.CrudServiceImpl.create(..)) || execution(* org.plos.namedentity.service.CrudServiceImpl.update(..))"/>
            <aop:around method="validate" pointcut-ref="createOrUpdate"/>
        </aop:aspect>
    </aop:config>
</beans>
