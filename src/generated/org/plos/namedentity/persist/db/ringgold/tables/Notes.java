/**
 * This class is generated by jOOQ
 */
package org.plos.namedentity.persist.db.ringgold.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.plos.namedentity.persist.db.ringgold.Keys;
import org.plos.namedentity.persist.db.ringgold.Ringgold;
import org.plos.namedentity.persist.db.ringgold.tables.records.NotesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Notes extends TableImpl<NotesRecord> {

	private static final long serialVersionUID = 1028427084;

	/**
	 * The reference instance of <code>ringgold.notes</code>
	 */
	public static final Notes NOTES = new Notes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<NotesRecord> getRecordType() {
		return NotesRecord.class;
	}

	/**
	 * The column <code>ringgold.notes.rec_id</code>.
	 */
	public final TableField<NotesRecord, Integer> REC_ID = createField("rec_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>ringgold.notes.ringgold_id</code>.
	 */
	public final TableField<NotesRecord, Integer> RINGGOLD_ID = createField("ringgold_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ringgold.notes.notes</code>.
	 */
	public final TableField<NotesRecord, String> NOTES_ = createField("notes", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ringgold.notes.timestamp</code>.
	 */
	public final TableField<NotesRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>ringgold.notes</code> table reference
	 */
	public Notes() {
		this("notes", null);
	}

	/**
	 * Create an aliased <code>ringgold.notes</code> table reference
	 */
	public Notes(String alias) {
		this(alias, NOTES);
	}

	private Notes(String alias, Table<NotesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Notes(String alias, Table<NotesRecord> aliased, Field<?>[] parameters) {
		super(alias, Ringgold.RINGGOLD, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<NotesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_NOTES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<NotesRecord> getPrimaryKey() {
		return Keys.KEY_NOTES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<NotesRecord>> getKeys() {
		return Arrays.<UniqueKey<NotesRecord>>asList(Keys.KEY_NOTES_PRIMARY, Keys.KEY_NOTES_RINGGOLD_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Notes as(String alias) {
		return new Notes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Notes rename(String name) {
		return new Notes(name, null);
	}
}
