/**
 * This class is generated by jOOQ
 */
package org.plos.namedentity.persist.db.ringgold;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.plos.namedentity.persist.db.ringgold.tables.AltNames;
import org.plos.namedentity.persist.db.ringgold.tables.Consortia;
import org.plos.namedentity.persist.db.ringgold.tables.DeletedIds;
import org.plos.namedentity.persist.db.ringgold.tables.Identifiers;
import org.plos.namedentity.persist.db.ringgold.tables.Institutions;
import org.plos.namedentity.persist.db.ringgold.tables.Multies;
import org.plos.namedentity.persist.db.ringgold.tables.Notes;
import org.plos.namedentity.persist.db.ringgold.tables.Sizes;
import org.plos.namedentity.persist.db.ringgold.tables.Taxonomy;
import org.plos.namedentity.persist.db.ringgold.tables.Tiers;
import org.plos.namedentity.persist.db.ringgold.tables.Urls;
import org.plos.namedentity.persist.db.ringgold.tables.records.AltNamesRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.ConsortiaRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.DeletedIdsRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.IdentifiersRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.InstitutionsRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.MultiesRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.NotesRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.SizesRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.TaxonomyRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.TiersRecord;
import org.plos.namedentity.persist.db.ringgold.tables.records.UrlsRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>ringgold</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<AltNamesRecord, Integer> IDENTITY_ALT_NAMES = Identities0.IDENTITY_ALT_NAMES;
	public static final Identity<ConsortiaRecord, Integer> IDENTITY_CONSORTIA = Identities0.IDENTITY_CONSORTIA;
	public static final Identity<DeletedIdsRecord, Integer> IDENTITY_DELETED_IDS = Identities0.IDENTITY_DELETED_IDS;
	public static final Identity<IdentifiersRecord, Integer> IDENTITY_IDENTIFIERS = Identities0.IDENTITY_IDENTIFIERS;
	public static final Identity<InstitutionsRecord, Integer> IDENTITY_INSTITUTIONS = Identities0.IDENTITY_INSTITUTIONS;
	public static final Identity<MultiesRecord, Integer> IDENTITY_MULTIES = Identities0.IDENTITY_MULTIES;
	public static final Identity<NotesRecord, Integer> IDENTITY_NOTES = Identities0.IDENTITY_NOTES;
	public static final Identity<SizesRecord, Integer> IDENTITY_SIZES = Identities0.IDENTITY_SIZES;
	public static final Identity<TaxonomyRecord, Integer> IDENTITY_TAXONOMY = Identities0.IDENTITY_TAXONOMY;
	public static final Identity<TiersRecord, Integer> IDENTITY_TIERS = Identities0.IDENTITY_TIERS;
	public static final Identity<UrlsRecord, Integer> IDENTITY_URLS = Identities0.IDENTITY_URLS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AltNamesRecord> KEY_ALT_NAMES_PRIMARY = UniqueKeys0.KEY_ALT_NAMES_PRIMARY;
	public static final UniqueKey<ConsortiaRecord> KEY_CONSORTIA_PRIMARY = UniqueKeys0.KEY_CONSORTIA_PRIMARY;
	public static final UniqueKey<DeletedIdsRecord> KEY_DELETED_IDS_PRIMARY = UniqueKeys0.KEY_DELETED_IDS_PRIMARY;
	public static final UniqueKey<IdentifiersRecord> KEY_IDENTIFIERS_PRIMARY = UniqueKeys0.KEY_IDENTIFIERS_PRIMARY;
	public static final UniqueKey<InstitutionsRecord> KEY_INSTITUTIONS_PRIMARY = UniqueKeys0.KEY_INSTITUTIONS_PRIMARY;
	public static final UniqueKey<InstitutionsRecord> KEY_INSTITUTIONS_RINGGOLD_ID = UniqueKeys0.KEY_INSTITUTIONS_RINGGOLD_ID;
	public static final UniqueKey<MultiesRecord> KEY_MULTIES_PRIMARY = UniqueKeys0.KEY_MULTIES_PRIMARY;
	public static final UniqueKey<NotesRecord> KEY_NOTES_PRIMARY = UniqueKeys0.KEY_NOTES_PRIMARY;
	public static final UniqueKey<NotesRecord> KEY_NOTES_RINGGOLD_ID = UniqueKeys0.KEY_NOTES_RINGGOLD_ID;
	public static final UniqueKey<SizesRecord> KEY_SIZES_PRIMARY = UniqueKeys0.KEY_SIZES_PRIMARY;
	public static final UniqueKey<TaxonomyRecord> KEY_TAXONOMY_PRIMARY = UniqueKeys0.KEY_TAXONOMY_PRIMARY;
	public static final UniqueKey<TiersRecord> KEY_TIERS_PRIMARY = UniqueKeys0.KEY_TIERS_PRIMARY;
	public static final UniqueKey<UrlsRecord> KEY_URLS_PRIMARY = UniqueKeys0.KEY_URLS_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<AltNamesRecord, Integer> IDENTITY_ALT_NAMES = createIdentity(AltNames.ALT_NAMES, AltNames.ALT_NAMES.REC_ID);
		public static Identity<ConsortiaRecord, Integer> IDENTITY_CONSORTIA = createIdentity(Consortia.CONSORTIA, Consortia.CONSORTIA.REC_ID);
		public static Identity<DeletedIdsRecord, Integer> IDENTITY_DELETED_IDS = createIdentity(DeletedIds.DELETED_IDS, DeletedIds.DELETED_IDS.REC_ID);
		public static Identity<IdentifiersRecord, Integer> IDENTITY_IDENTIFIERS = createIdentity(Identifiers.IDENTIFIERS, Identifiers.IDENTIFIERS.REC_ID);
		public static Identity<InstitutionsRecord, Integer> IDENTITY_INSTITUTIONS = createIdentity(Institutions.INSTITUTIONS, Institutions.INSTITUTIONS.REC_ID);
		public static Identity<MultiesRecord, Integer> IDENTITY_MULTIES = createIdentity(Multies.MULTIES, Multies.MULTIES.REC_ID);
		public static Identity<NotesRecord, Integer> IDENTITY_NOTES = createIdentity(Notes.NOTES, Notes.NOTES.REC_ID);
		public static Identity<SizesRecord, Integer> IDENTITY_SIZES = createIdentity(Sizes.SIZES, Sizes.SIZES.REC_ID);
		public static Identity<TaxonomyRecord, Integer> IDENTITY_TAXONOMY = createIdentity(Taxonomy.TAXONOMY, Taxonomy.TAXONOMY.REC_ID);
		public static Identity<TiersRecord, Integer> IDENTITY_TIERS = createIdentity(Tiers.TIERS, Tiers.TIERS.REC_ID);
		public static Identity<UrlsRecord, Integer> IDENTITY_URLS = createIdentity(Urls.URLS, Urls.URLS.REC_ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AltNamesRecord> KEY_ALT_NAMES_PRIMARY = createUniqueKey(AltNames.ALT_NAMES, AltNames.ALT_NAMES.REC_ID);
		public static final UniqueKey<ConsortiaRecord> KEY_CONSORTIA_PRIMARY = createUniqueKey(Consortia.CONSORTIA, Consortia.CONSORTIA.REC_ID);
		public static final UniqueKey<DeletedIdsRecord> KEY_DELETED_IDS_PRIMARY = createUniqueKey(DeletedIds.DELETED_IDS, DeletedIds.DELETED_IDS.REC_ID);
		public static final UniqueKey<IdentifiersRecord> KEY_IDENTIFIERS_PRIMARY = createUniqueKey(Identifiers.IDENTIFIERS, Identifiers.IDENTIFIERS.REC_ID);
		public static final UniqueKey<InstitutionsRecord> KEY_INSTITUTIONS_PRIMARY = createUniqueKey(Institutions.INSTITUTIONS, Institutions.INSTITUTIONS.REC_ID);
		public static final UniqueKey<InstitutionsRecord> KEY_INSTITUTIONS_RINGGOLD_ID = createUniqueKey(Institutions.INSTITUTIONS, Institutions.INSTITUTIONS.RINGGOLD_ID);
		public static final UniqueKey<MultiesRecord> KEY_MULTIES_PRIMARY = createUniqueKey(Multies.MULTIES, Multies.MULTIES.REC_ID);
		public static final UniqueKey<NotesRecord> KEY_NOTES_PRIMARY = createUniqueKey(Notes.NOTES, Notes.NOTES.REC_ID);
		public static final UniqueKey<NotesRecord> KEY_NOTES_RINGGOLD_ID = createUniqueKey(Notes.NOTES, Notes.NOTES.RINGGOLD_ID);
		public static final UniqueKey<SizesRecord> KEY_SIZES_PRIMARY = createUniqueKey(Sizes.SIZES, Sizes.SIZES.REC_ID);
		public static final UniqueKey<TaxonomyRecord> KEY_TAXONOMY_PRIMARY = createUniqueKey(Taxonomy.TAXONOMY, Taxonomy.TAXONOMY.REC_ID);
		public static final UniqueKey<TiersRecord> KEY_TIERS_PRIMARY = createUniqueKey(Tiers.TIERS, Tiers.TIERS.REC_ID);
		public static final UniqueKey<UrlsRecord> KEY_URLS_PRIMARY = createUniqueKey(Urls.URLS, Urls.URLS.REC_ID);
	}
}
