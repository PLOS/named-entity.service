/**
 * This class is generated by jOOQ
 */
package org.plos.namedentity.persist.db.namedentities.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.plos.namedentity.persist.db.namedentities.Keys;
import org.plos.namedentity.persist.db.namedentities.Namedentities;
import org.plos.namedentity.persist.db.namedentities.tables.records.GlobaltypesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Globaltypes extends TableImpl<GlobaltypesRecord> {

	private static final long serialVersionUID = -397522319;

	/**
	 * The reference instance of <code>namedEntities.globalTypes</code>
	 */
	public static final Globaltypes GLOBALTYPES = new Globaltypes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GlobaltypesRecord> getRecordType() {
		return GlobaltypesRecord.class;
	}

	/**
	 * The column <code>namedEntities.globalTypes.id</code>.
	 */
	public final TableField<GlobaltypesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.globalTypes.typeId</code>.
	 */
	public final TableField<GlobaltypesRecord, Integer> TYPEID = createField("typeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.globalTypes.shortDescription</code>.
	 */
	public final TableField<GlobaltypesRecord, String> SHORTDESCRIPTION = createField("shortDescription", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.globalTypes.longDescription</code>.
	 */
	public final TableField<GlobaltypesRecord, String> LONGDESCRIPTION = createField("longDescription", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>namedEntities.globalTypes.typeCode</code>.
	 */
	public final TableField<GlobaltypesRecord, String> TYPECODE = createField("typeCode", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.globalTypes.created</code>.
	 */
	public final TableField<GlobaltypesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.globalTypes.lastModified</code>.
	 */
	public final TableField<GlobaltypesRecord, Timestamp> LASTMODIFIED = createField("lastModified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.globalTypes.createdBy</code>.
	 */
	public final TableField<GlobaltypesRecord, Integer> CREATEDBY = createField("createdBy", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>namedEntities.globalTypes.lastModifiedBy</code>.
	 */
	public final TableField<GlobaltypesRecord, Integer> LASTMODIFIEDBY = createField("lastModifiedBy", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>namedEntities.globalTypes</code> table reference
	 */
	public Globaltypes() {
		this("globalTypes", null);
	}

	/**
	 * Create an aliased <code>namedEntities.globalTypes</code> table reference
	 */
	public Globaltypes(String alias) {
		this(alias, GLOBALTYPES);
	}

	private Globaltypes(String alias, Table<GlobaltypesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Globaltypes(String alias, Table<GlobaltypesRecord> aliased, Field<?>[] parameters) {
		super(alias, Namedentities.NAMEDENTITIES, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<GlobaltypesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_GLOBALTYPES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<GlobaltypesRecord> getPrimaryKey() {
		return Keys.KEY_GLOBALTYPES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<GlobaltypesRecord>> getKeys() {
		return Arrays.<UniqueKey<GlobaltypesRecord>>asList(Keys.KEY_GLOBALTYPES_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<GlobaltypesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<GlobaltypesRecord, ?>>asList(Keys.GLOBALTYPES_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Globaltypes as(String alias) {
		return new Globaltypes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Globaltypes rename(String name) {
		return new Globaltypes(name, null);
	}
}
