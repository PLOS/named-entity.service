/**
 * This class is generated by jOOQ
 */
package org.plos.namedentity.persist.db.namedentities.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.plos.namedentity.persist.db.namedentities.Keys;
import org.plos.namedentity.persist.db.namedentities.Namedentities;
import org.plos.namedentity.persist.db.namedentities.tables.records.UrlsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Urls extends TableImpl<UrlsRecord> {

	private static final long serialVersionUID = 1703265689;

	/**
	 * The reference instance of <code>namedEntities.urls</code>
	 */
	public static final Urls URLS = new Urls();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UrlsRecord> getRecordType() {
		return UrlsRecord.class;
	}

	/**
	 * The column <code>namedEntities.urls.id</code>.
	 */
	public final TableField<UrlsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.urls.nedId</code>.
	 */
	public final TableField<UrlsRecord, Integer> NEDID = createField("nedId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.urls.url</code>.
	 */
	public final TableField<UrlsRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.urls.sourceTypeId</code>.
	 */
	public final TableField<UrlsRecord, Integer> SOURCETYPEID = createField("sourceTypeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.urls.created</code>.
	 */
	public final TableField<UrlsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.urls.createdBy</code>.
	 */
	public final TableField<UrlsRecord, Integer> CREATEDBY = createField("createdBy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.urls.lastModified</code>.
	 */
	public final TableField<UrlsRecord, Timestamp> LASTMODIFIED = createField("lastModified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.urls.lastModifiedBy</code>.
	 */
	public final TableField<UrlsRecord, Integer> LASTMODIFIEDBY = createField("lastModifiedBy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>namedEntities.urls</code> table reference
	 */
	public Urls() {
		this("urls", null);
	}

	/**
	 * Create an aliased <code>namedEntities.urls</code> table reference
	 */
	public Urls(String alias) {
		this(alias, URLS);
	}

	private Urls(String alias, Table<UrlsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Urls(String alias, Table<UrlsRecord> aliased, Field<?>[] parameters) {
		super(alias, Namedentities.NAMEDENTITIES, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UrlsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_URLS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UrlsRecord> getPrimaryKey() {
		return Keys.KEY_URLS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UrlsRecord>> getKeys() {
		return Arrays.<UniqueKey<UrlsRecord>>asList(Keys.KEY_URLS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UrlsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UrlsRecord, ?>>asList(Keys.URLS_IBFK_2, Keys.URLS_IBFK_1, Keys.URLS_IBFK_3, Keys.URLS_IBFK_4);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Urls as(String alias) {
		return new Urls(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Urls rename(String name) {
		return new Urls(name, null);
	}
}
