/**
 * This class is generated by jOOQ
 */
package org.plos.namedentity.persist.db.namedentities.tables;


import java.sql.Timestamp;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.plos.jooq.converters.LocalDateConverter;
import org.plos.namedentity.persist.db.namedentities.Keys;
import org.plos.namedentity.persist.db.namedentities.Namedentities;
import org.plos.namedentity.persist.db.namedentities.tables.records.RelationshipsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Relationships extends TableImpl<RelationshipsRecord> {

	private static final long serialVersionUID = 653132539;

	/**
	 * The reference instance of <code>namedEntities.relationships</code>
	 */
	public static final Relationships RELATIONSHIPS = new Relationships();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<RelationshipsRecord> getRecordType() {
		return RelationshipsRecord.class;
	}

	/**
	 * The column <code>namedEntities.relationships.id</code>.
	 */
	public final TableField<RelationshipsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.relationships.typeId</code>.
	 */
	public final TableField<RelationshipsRecord, Integer> TYPEID = createField("typeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.relationships.nedId</code>.
	 */
	public final TableField<RelationshipsRecord, Integer> NEDID = createField("nedId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.relationships.nedIdRelated</code>.
	 */
	public final TableField<RelationshipsRecord, Integer> NEDIDRELATED = createField("nedIdRelated", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.relationships.title</code>.
	 */
	public final TableField<RelationshipsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>namedEntities.relationships.sourceTypeId</code>.
	 */
	public final TableField<RelationshipsRecord, Integer> SOURCETYPEID = createField("sourceTypeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.relationships.startDate</code>.
	 */
	public final TableField<RelationshipsRecord, LocalDate> STARTDATE = createField("startDate", org.jooq.impl.SQLDataType.DATE, this, "", new LocalDateConverter());

	/**
	 * The column <code>namedEntities.relationships.endDate</code>.
	 */
	public final TableField<RelationshipsRecord, LocalDate> ENDDATE = createField("endDate", org.jooq.impl.SQLDataType.DATE, this, "", new LocalDateConverter());

	/**
	 * The column <code>namedEntities.relationships.created</code>.
	 */
	public final TableField<RelationshipsRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.relationships.createdBy</code>.
	 */
	public final TableField<RelationshipsRecord, Integer> CREATEDBY = createField("createdBy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.relationships.lastModified</code>.
	 */
	public final TableField<RelationshipsRecord, Timestamp> LASTMODIFIED = createField("lastModified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.relationships.lastModifiedBy</code>.
	 */
	public final TableField<RelationshipsRecord, Integer> LASTMODIFIEDBY = createField("lastModifiedBy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>namedEntities.relationships</code> table reference
	 */
	public Relationships() {
		this("relationships", null);
	}

	/**
	 * Create an aliased <code>namedEntities.relationships</code> table reference
	 */
	public Relationships(String alias) {
		this(alias, RELATIONSHIPS);
	}

	private Relationships(String alias, Table<RelationshipsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Relationships(String alias, Table<RelationshipsRecord> aliased, Field<?>[] parameters) {
		super(alias, Namedentities.NAMEDENTITIES, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<RelationshipsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_RELATIONSHIPS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<RelationshipsRecord> getPrimaryKey() {
		return Keys.KEY_RELATIONSHIPS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<RelationshipsRecord>> getKeys() {
		return Arrays.<UniqueKey<RelationshipsRecord>>asList(Keys.KEY_RELATIONSHIPS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<RelationshipsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<RelationshipsRecord, ?>>asList(Keys.RELATIONSHIPS_IBFK_1, Keys.RELATIONSHIPS_IBFK_2, Keys.RELATIONSHIPS_IBFK_3, Keys.RELATIONSHIPS_IBFK_4, Keys.RELATIONSHIPS_IBFK_5);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Relationships as(String alias) {
		return new Relationships(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Relationships rename(String name) {
		return new Relationships(name, null);
	}
}
