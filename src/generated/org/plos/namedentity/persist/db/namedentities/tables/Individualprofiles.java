/**
 * This class is generated by jOOQ
 */
package org.plos.namedentity.persist.db.namedentities.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.plos.namedentity.persist.db.namedentities.Keys;
import org.plos.namedentity.persist.db.namedentities.Namedentities;
import org.plos.namedentity.persist.db.namedentities.tables.records.IndividualprofilesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Individualprofiles extends TableImpl<IndividualprofilesRecord> {

	private static final long serialVersionUID = -662075340;

	/**
	 * The reference instance of <code>namedEntities.individualProfiles</code>
	 */
	public static final Individualprofiles INDIVIDUALPROFILES = new Individualprofiles();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<IndividualprofilesRecord> getRecordType() {
		return IndividualprofilesRecord.class;
	}

	/**
	 * The column <code>namedEntities.individualProfiles.id</code>.
	 */
	public final TableField<IndividualprofilesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.nedId</code>.
	 */
	public final TableField<IndividualprofilesRecord, Integer> NEDID = createField("nedId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.firstName</code>.
	 */
	public final TableField<IndividualprofilesRecord, String> FIRSTNAME = createField("firstName", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.middleName</code>.
	 */
	public final TableField<IndividualprofilesRecord, String> MIDDLENAME = createField("middleName", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.lastName</code>.
	 */
	public final TableField<IndividualprofilesRecord, String> LASTNAME = createField("lastName", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.nickName</code>.
	 */
	public final TableField<IndividualprofilesRecord, String> NICKNAME = createField("nickName", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.namePrefixTypeId</code>.
	 */
	public final TableField<IndividualprofilesRecord, Integer> NAMEPREFIXTYPEID = createField("namePrefixTypeId", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.nameSuffixTypeId</code>.
	 */
	public final TableField<IndividualprofilesRecord, Integer> NAMESUFFIXTYPEID = createField("nameSuffixTypeId", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.displayName</code>.
	 */
	public final TableField<IndividualprofilesRecord, String> DISPLAYNAME = createField("displayName", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.biography</code>.
	 */
	public final TableField<IndividualprofilesRecord, String> BIOGRAPHY = createField("biography", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.sourceTypeId</code>.
	 */
	public final TableField<IndividualprofilesRecord, Integer> SOURCETYPEID = createField("sourceTypeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.isActive</code>.
	 */
	public final TableField<IndividualprofilesRecord, Byte> ISACTIVE = createField("isActive", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.created</code>.
	 */
	public final TableField<IndividualprofilesRecord, Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.createdBy</code>.
	 */
	public final TableField<IndividualprofilesRecord, Integer> CREATEDBY = createField("createdBy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.lastModified</code>.
	 */
	public final TableField<IndividualprofilesRecord, Timestamp> LASTMODIFIED = createField("lastModified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>namedEntities.individualProfiles.lastModifiedBy</code>.
	 */
	public final TableField<IndividualprofilesRecord, Integer> LASTMODIFIEDBY = createField("lastModifiedBy", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>namedEntities.individualProfiles</code> table reference
	 */
	public Individualprofiles() {
		this("individualProfiles", null);
	}

	/**
	 * Create an aliased <code>namedEntities.individualProfiles</code> table reference
	 */
	public Individualprofiles(String alias) {
		this(alias, INDIVIDUALPROFILES);
	}

	private Individualprofiles(String alias, Table<IndividualprofilesRecord> aliased) {
		this(alias, aliased, null);
	}

	private Individualprofiles(String alias, Table<IndividualprofilesRecord> aliased, Field<?>[] parameters) {
		super(alias, Namedentities.NAMEDENTITIES, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<IndividualprofilesRecord, Integer> getIdentity() {
		return Keys.IDENTITY_INDIVIDUALPROFILES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<IndividualprofilesRecord> getPrimaryKey() {
		return Keys.KEY_INDIVIDUALPROFILES_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<IndividualprofilesRecord>> getKeys() {
		return Arrays.<UniqueKey<IndividualprofilesRecord>>asList(Keys.KEY_INDIVIDUALPROFILES_PRIMARY, Keys.KEY_INDIVIDUALPROFILES_DISPLAYNAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<IndividualprofilesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<IndividualprofilesRecord, ?>>asList(Keys.INDIVIDUALPROFILES_IBFK_1, Keys.INDIVIDUALPROFILES_IBFK_3, Keys.INDIVIDUALPROFILES_IBFK_4, Keys.INDIVIDUALPROFILES_IBFK_2, Keys.INDIVIDUALPROFILES_IBFK_5, Keys.INDIVIDUALPROFILES_IBFK_6);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Individualprofiles as(String alias) {
		return new Individualprofiles(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Individualprofiles rename(String name) {
		return new Individualprofiles(name, null);
	}
}
