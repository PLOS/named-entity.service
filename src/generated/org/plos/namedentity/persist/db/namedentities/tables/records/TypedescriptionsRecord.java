/*
 * Copyright (c) 2017 Public Library of Science
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */

/**
 * This class is generated by jOOQ
 */
package org.plos.namedentity.persist.db.namedentities.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.plos.namedentity.persist.db.namedentities.tables.Typedescriptions;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TypedescriptionsRecord extends UpdatableRecordImpl<TypedescriptionsRecord> implements Record5<Integer, String, String, Timestamp, Timestamp> {

	private static final long serialVersionUID = -291228560;

	/**
	 * Setter for <code>namedEntities.typeDescriptions.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>namedEntities.typeDescriptions.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>namedEntities.typeDescriptions.description</code>.
	 */
	public void setDescription(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>namedEntities.typeDescriptions.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>namedEntities.typeDescriptions.howUsed</code>.
	 */
	public void setHowused(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>namedEntities.typeDescriptions.howUsed</code>.
	 */
	public String getHowused() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>namedEntities.typeDescriptions.created</code>.
	 */
	public void setCreated(Timestamp value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>namedEntities.typeDescriptions.created</code>.
	 */
	public Timestamp getCreated() {
		return (Timestamp) getValue(3);
	}

	/**
	 * Setter for <code>namedEntities.typeDescriptions.lastModified</code>.
	 */
	public void setLastmodified(Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>namedEntities.typeDescriptions.lastModified</code>.
	 */
	public Timestamp getLastmodified() {
		return (Timestamp) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, Timestamp, Timestamp> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, String, String, Timestamp, Timestamp> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Typedescriptions.TYPEDESCRIPTIONS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Typedescriptions.TYPEDESCRIPTIONS.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Typedescriptions.TYPEDESCRIPTIONS.HOWUSED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field4() {
		return Typedescriptions.TYPEDESCRIPTIONS.CREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return Typedescriptions.TYPEDESCRIPTIONS.LASTMODIFIED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getHowused();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value4() {
		return getCreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getLastmodified();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypedescriptionsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypedescriptionsRecord value2(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypedescriptionsRecord value3(String value) {
		setHowused(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypedescriptionsRecord value4(Timestamp value) {
		setCreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypedescriptionsRecord value5(Timestamp value) {
		setLastmodified(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TypedescriptionsRecord values(Integer value1, String value2, String value3, Timestamp value4, Timestamp value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TypedescriptionsRecord
	 */
	public TypedescriptionsRecord() {
		super(Typedescriptions.TYPEDESCRIPTIONS);
	}

	/**
	 * Create a detached, initialised TypedescriptionsRecord
	 */
	public TypedescriptionsRecord(Integer id, String description, String howused, Timestamp created, Timestamp lastmodified) {
		super(Typedescriptions.TYPEDESCRIPTIONS);

		setValue(0, id);
		setValue(1, description);
		setValue(2, howused);
		setValue(3, created);
		setValue(4, lastmodified);
	}
}
