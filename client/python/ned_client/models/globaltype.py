# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from pprint import pformat
from six import iteritems


class Globaltype(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        Globaltype - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'typeid': 'int',
            'shortdescription': 'str',
            'longdescription': 'str',
            'typecode': 'str',
            'created': 'datetime',
            'lastmodified': 'datetime',
            'createdby': 'int',
            'lastmodifiedby': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'typeid': 'typeid',
            'shortdescription': 'shortdescription',
            'longdescription': 'longdescription',
            'typecode': 'typecode',
            'created': 'created',
            'lastmodified': 'lastmodified',
            'createdby': 'createdby',
            'lastmodifiedby': 'lastmodifiedby'
        }

        self._id = None
        self._typeid = None
        self._shortdescription = None
        self._longdescription = None
        self._typecode = None
        self._created = None
        self._lastmodified = None
        self._createdby = None
        self._lastmodifiedby = None

    @property
    def id(self):
        """
        Gets the id of this Globaltype.


        :return: The id of this Globaltype.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this Globaltype.


        :param id: The id of this Globaltype.
        :type: int
        """
        self._id = id

    @property
    def typeid(self):
        """
        Gets the typeid of this Globaltype.


        :return: The typeid of this Globaltype.
        :rtype: int
        """
        return self._typeid

    @typeid.setter
    def typeid(self, typeid):
        """
        Sets the typeid of this Globaltype.


        :param typeid: The typeid of this Globaltype.
        :type: int
        """
        self._typeid = typeid

    @property
    def shortdescription(self):
        """
        Gets the shortdescription of this Globaltype.


        :return: The shortdescription of this Globaltype.
        :rtype: str
        """
        return self._shortdescription

    @shortdescription.setter
    def shortdescription(self, shortdescription):
        """
        Sets the shortdescription of this Globaltype.


        :param shortdescription: The shortdescription of this Globaltype.
        :type: str
        """
        self._shortdescription = shortdescription

    @property
    def longdescription(self):
        """
        Gets the longdescription of this Globaltype.


        :return: The longdescription of this Globaltype.
        :rtype: str
        """
        return self._longdescription

    @longdescription.setter
    def longdescription(self, longdescription):
        """
        Sets the longdescription of this Globaltype.


        :param longdescription: The longdescription of this Globaltype.
        :type: str
        """
        self._longdescription = longdescription

    @property
    def typecode(self):
        """
        Gets the typecode of this Globaltype.


        :return: The typecode of this Globaltype.
        :rtype: str
        """
        return self._typecode

    @typecode.setter
    def typecode(self, typecode):
        """
        Sets the typecode of this Globaltype.


        :param typecode: The typecode of this Globaltype.
        :type: str
        """
        self._typecode = typecode

    @property
    def created(self):
        """
        Gets the created of this Globaltype.


        :return: The created of this Globaltype.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """
        Sets the created of this Globaltype.


        :param created: The created of this Globaltype.
        :type: datetime
        """
        self._created = created

    @property
    def lastmodified(self):
        """
        Gets the lastmodified of this Globaltype.


        :return: The lastmodified of this Globaltype.
        :rtype: datetime
        """
        return self._lastmodified

    @lastmodified.setter
    def lastmodified(self, lastmodified):
        """
        Sets the lastmodified of this Globaltype.


        :param lastmodified: The lastmodified of this Globaltype.
        :type: datetime
        """
        self._lastmodified = lastmodified

    @property
    def createdby(self):
        """
        Gets the createdby of this Globaltype.


        :return: The createdby of this Globaltype.
        :rtype: int
        """
        return self._createdby

    @createdby.setter
    def createdby(self, createdby):
        """
        Sets the createdby of this Globaltype.


        :param createdby: The createdby of this Globaltype.
        :type: int
        """
        self._createdby = createdby

    @property
    def lastmodifiedby(self):
        """
        Gets the lastmodifiedby of this Globaltype.


        :return: The lastmodifiedby of this Globaltype.
        :rtype: int
        """
        return self._lastmodifiedby

    @lastmodifiedby.setter
    def lastmodifiedby(self, lastmodifiedby):
        """
        Sets the lastmodifiedby of this Globaltype.


        :param lastmodifiedby: The lastmodifiedby of this Globaltype.
        :type: int
        """
        self._lastmodifiedby = lastmodifiedby

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()
