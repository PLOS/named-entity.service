<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2006-2014 by Public Library of Science
  ~
  ~ http://plos.org
  ~ http://ambraproject.org
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ You may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.plos</groupId>
  <artifactId>ned-ambra-admin-lib</artifactId>
  <version>2.9.28</version>
  <packaging>jar</packaging>
  <name>Ambra Administration</name>

  <description>Administrative web application for Ambra.</description>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0</url>
      <comments>Copyright (c) 2006-2009 by Ambraproject, Inc.</comments>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.6</maven.compiler.target>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <spring.version>4.1.6.RELEASE</spring.version>
    <xerces.version>2.9.1</xerces.version>
    <struts.version>2.3.16.3</struts.version>
    <camel.version>2.10.4</camel.version>
    <activemq.version>5.2.0</activemq.version>
    <easymock.version>3.2</easymock.version>
    <conf-helper.version>2.2.1</conf-helper.version>
    <ambra.version>2.10.17</ambra.version>
    <filestore.version>1.2.0</filestore.version>
    <solr.version>4.1.0</solr.version>
    <hsqldb.version>2.3.0</hsqldb.version>
    <junit.version>4.11</junit.version>
    <testng.version>6.8.1</testng.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <surefire.version>2.16</surefire.version>
    <guava.version>15.0</guava.version>
    <ehcache.version>1.6.2</ehcache.version>
  </properties>

  <repositories>
    <repository>
      <id>ambra</id>
      <name>Maven 2 Release Repository for Ambra</name>
      <url>http://maven.ambraproject.org/maven2/release/</url>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>ambra.snapshot</id>
      <name>Maven 2 Snapshot Repository for Ambra</name>
      <url>http://maven.ambraproject.org/maven2/snapshot/</url>
      <releases>
        <enabled>false</enabled>
        <updatePolicy>always</updatePolicy>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>http://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <scm>
    <developerConnection>scm:svn:http://ambraproject.org/svn/ambra/ambra-admin/tags/ambra-admin-2.5.0</developerConnection>
    <connection>scm:svn:http://ambraproject.org/svn/ambra/ambra-admin/tags/ambra-admin-2.5.0</connection>
    <url>http://www.ambraproject.org/trac/browser/ambra/ambra-admin/tags/ambra-admin-2.5.0</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>ambra</id>
      <url>sftp://maven.ambraproject.org/home/maven2/repository/release</url>
    </repository>
    <snapshotRepository>
      <id>ambra.snapshot</id>
      <url>sftp://maven.ambraproject.org/home/maven2/repository/snapshot</url>
      <uniqueVersion>false</uniqueVersion>
    </snapshotRepository>
    <site>
      <id>ambra.javadoc</id>
      <!-- This is where the site-deploy phase will put the documentation -->
      <url>sftp://maven.ambraproject.org/home/maven2/javadoc</url>
    </site>
  </distributionManagement>

  <dependencies>
    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>ambra-base</artifactId>
      <version>${ambra.version}</version>
      <exclusions>
        <!--These are some easy wins for reducing the size of the admin war, we don't need these libraries in admin-->
        <exclusion>
          <groupId>org.tuckey</groupId>
          <artifactId>urlrewritefilter</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.solr</groupId>
          <artifactId>solr-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ambraproject</groupId>
          <artifactId>ambra-js</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>ambra-queue</artifactId>
      <version>${ambra.version}</version>
    </dependency>

    <dependency>
      <groupId>com.googlecode.jcsv</groupId>
      <artifactId>jcsv</artifactId>
      <version>1.4.0</version>
    </dependency>

    <dependency>
      <groupId>com.googlecode.juniversalchardet</groupId>
      <artifactId>juniversalchardet</artifactId>
      <version>1.0.3</version>
    </dependency>

    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>${ehcache.version}</version>
    </dependency>

    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>file-store</artifactId>
      <version>${filestore.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>cglib</groupId>
      <artifactId>cglib</artifactId>
      <version>2.2.2</version>
      <scope>runtime</scope>
    </dependency>

    <!--camel stuff-->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>${camel.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-mail</artifactId>
      <version>${camel.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-quartz</artifactId>
      <version>${camel.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jms</artifactId>
      <version>${camel.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>${camel.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-camel</artifactId>
      <version>${activemq.version}</version>
    </dependency>

    <dependency>
      <groupId>net.sf.saxon</groupId>
      <artifactId>saxon</artifactId>
      <version>9.3</version>
    </dependency>

    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>${xerces.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.struts</groupId>
      <artifactId>struts2-spring-plugin</artifactId>
      <version>${struts.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-mock</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.ambraproject</groupId>
      <artifactId>ambra-base</artifactId>
      <version>${ambra.version}</version>
      <!--In a future version of maven, this classifier may need to change to test-jar-->
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <!--Transitive test dependencies don't get handed down from ambra-->
    <dependency>
      <groupId>xmlunit</groupId>
      <artifactId>xmlunit</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <artifactId>solr-core</artifactId>
      <groupId>org.apache.solr</groupId>
      <version>${solr.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>

        <!--
        Unfortunately, the version of jetty used internally by this solr
        testing library conflicts with a version that we depend on (camel-jetty).
        The symptom is a mysterious IncompatibleClassChangeError when running
        a test that depends on both of these dependencies.  We fix this by
        excluding the following.  Luckily, solr-test-framework, in the way we
        use it, either doesn't need these or can get by with the conflicting
        version.
        -->
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-security</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-servlet</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-test-framework</artifactId>
      <version>${solr.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>


    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>${easymock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>${commons-dbcp.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsqldb.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jetty</artifactId>
      <version>${camel.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

  </dependencies>

  <build>
    <finalName>ambra-admin</finalName>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <!--specify compiler version and encoding-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${maven.compiler.encoding}</encoding>
        </configuration>
      </plugin>

      <!--settings for running tests-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <argLine>-Xms1024m -Xmx2048m -XX:MaxPermSize=1024m</argLine>
          <systemProperties>
            <property>
              <name>log4j.configuration</name>
              <value>file:${project.basedir}/target/test-classes/log4j.properties</value>
            </property>
          </systemProperties>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat6-maven-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <path>/admin</path>
          <contextFile>/etc/ambra/context.xml</contextFile>
          <additionalConfigFilesDir>/etc/ambra/</additionalConfigFilesDir>
          <!--useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader-->
          <systemProperties>
            <java.util.logging.manager>org.apache.juli.ClassLoaderLogManager</java.util.logging.manager>
            <log4j.configuration>file:///etc/ambra/log4j.xml</log4j.configuration>
            <org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH>true</org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH>
            <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
            <ambra.platform.appContext />
            <struts.devMode>true</struts.devMode>
          </systemProperties>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>juli</artifactId>
            <version>6.0.29</version>
          </dependency>
          <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <version>7.0.21</version>
          </dependency>
          <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.12</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <!--<mainClass>org.plos.etl.sync.EtlSync</mainClass>-->
            </manifest>
          </archive>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <finalName>${project.artifactId}-${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.0-beta-7</version>
        <configuration>
          <goals>deploy</goals>
          <!-- disable site deploy -->
          <useReleaseProfile>false</useReleaseProfile>
          <!-- no javadoc and source jars -->
          <tagBase>http://ambraproject.org/svn/ambra/ambra-admin/tags</tagBase>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <preparationGoals>clean install</preparationGoals>
          <arguments>-Ppackages,distribution,release</arguments>
        </configuration>
      </plugin>
    </plugins>
    <!--Turn on filtering of test resource to set up directories -->
    <testResources>
      <!-- Do not "filter" binary files when copying, since text substitutions will break binary files -->
      <testResource>
        <filtering>true</filtering>
        <directory>${project.basedir}/src/test/resources</directory>
        <excludes>
          <exclude>*.zip</exclude>
          <exclude>**/*.zip</exclude>
        </excludes>
      </testResource>

      <!-- Copy over binary files without "filtering", since text substitutions will break binary files -->
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
        <includes>
          <include>*.zip</include>
          <include>**/*.zip</include>
        </includes>
      </testResource>

    </testResources>

    <defaultGoal>install</defaultGoal>

    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>2.2</version><!-- Version 2.4 causes http://jira.codehaus.org/browse/WAGON-393 -->
      </extension>
    </extensions>

  </build>
</project>
